/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.HoaDon;
import Model.HoaDonChiTiet;
import Repo.HoaDonChiTietRepo;
import Repo.HoaDonRepo;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Element;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;

/**
 *
 * @author nguye
 */
public class HoaDonView extends javax.swing.JFrame {

    private HoaDonRepo repoHD = new HoaDonRepo();
    private HoaDonChiTietRepo repoHDCT = new HoaDonChiTietRepo();
    private DefaultTableModel mol = new DefaultTableModel();
    private int index = -1;
    

    /**
     * Creates new form Hoa_Don
     */
    public HoaDonView() {
        initComponents();
        this.fillTable(repoHD.getAll());
    // Khởi tạo repoHDCT
    repoHDCT = new HoaDonChiTietRepo();
    // Hiển dòng cuối cùng lên form
    index = repoHD.getAll().size();
//    this.showData(index - 1);
    }

    void fillTable(ArrayList<HoaDon> list) {
        // b1: khỏi tạo
        mol = (DefaultTableModel) tbl_HoaDon.getModel();
        //b2: xóa bảng cũ
        mol.setRowCount(0);
        //b3: thêm dl
        for (HoaDon x : list) {
            mol.addRow(x.toDataRow());
        }
    }

//    void showData(int index) {
//        // hiện dl tại dong index lên form
//        txt_MaHD.setText(tbl_HoaDon.getValueAt(index, 0).toString());
//        txt_MaKH.setText(tbl_HoaDon.getValueAt(index, 1).toString());
//        txt_MaNV.setText(tbl_HoaDon.getValueAt(index, 2).toString());
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_InHoaDon = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_TimKiem = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dtc_Tu = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dtc_Den = new com.toedter.calendar.JDateChooser();
        btn_TimKiem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_HoaDon = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_HoaDonCT = new javax.swing.JTable();
        btn_reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN");

        btn_InHoaDon.setBackground(new java.awt.Color(255, 102, 255));
        btn_InHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_InHoaDon.setIcon(new javax.swing.ImageIcon("C:\\Users\\nguye\\OneDrive\\Máy tính\\DuAn1_BanGiay_LongDZ\\src\\icon\\7851319_financial_investment_invoice_bill_receipt_icon (1).png")); // NOI18N
        btn_InHoaDon.setText("IN DANH SÁCH HÓA ĐƠN");
        btn_InHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InHoaDonActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(102, 255, 255));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tìm Kiếm :");

        txt_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TimKiemActionPerformed(evt);
            }
        });
        txt_TimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_TimKiemKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Thời gian từ :");

        dtc_Tu.setDate(new java.util.Date(1743983594000L));
        dtc_Tu.setDateFormatString("yyyy-MM-dd ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("đến");

        dtc_Den.setDateFormatString("yyyy-MM-dd");

        btn_TimKiem.setBackground(new java.awt.Color(255, 255, 153));
        btn_TimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_TimKiem.setIcon(new javax.swing.ImageIcon("C:\\Users\\nguye\\OneDrive\\Máy tính\\DuAn1_BanGiay_LongDZ\\src\\icon\\10758957_user_search_icon.png")); // NOI18N
        btn_TimKiem.setText("TÌM KIẾM");
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtc_Tu, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(dtc_Den, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(btn_TimKiem)))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel5))
                            .addComponent(dtc_Den, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(dtc_Tu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btn_TimKiem)
                .addGap(19, 19, 19))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Hóa Đơn :");

        tbl_HoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hóa Đơn", "Mã Khách Hàng", "Mã Nhân Viên", "Mã Giảm Giá", "Ngày Mua", "Tổng Tiền", "Giảm Giá", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_HoaDon);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Chi Tiết Hóa Đơn :");

        tbl_HoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Đơn Giá", "Số Lượng", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_HoaDonCT);

        btn_reset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8111405_reset_reload_refresh_sync_arrow_icon.png"))); // NOI18N
        btn_reset.setText("LÀM MỚI");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1068, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_reset)
                .addGap(519, 519, 519))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_reset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hóa Đơn", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(163, 163, 163)
                .addComponent(btn_InHoaDon)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_InHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(21, 21, 21)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_InHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InHoaDonActionPerformed
   DefaultTableModel model = (DefaultTableModel) tbl_HoaDon.getModel();
    if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Không có hóa đơn nào để in!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // In hóa đơn ra PDF
    try {
        // Tạo đối tượng Document
        Document document = new Document();
        
        // Đặt đường dẫn và tên file PDF
        String pdfFilePath = "DanhSachHoaDon.pdf"; // Bạn có thể thay đổi đường dẫn nếu cần
        PdfWriter.getInstance(document, new FileOutputStream(pdfFilePath));
        
        // Mở document để bắt đầu ghi
        document.open();
        
        // Tạo font hỗ trợ tiếng Việt
        BaseFont bf = BaseFont.createFont("c:/windows/fonts/times.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
        Font fontTitle = new Font(bf, 16, Font.BOLD);
        Font fontHeader = new Font(bf, 12, Font.BOLD);
        Font fontData = new Font(bf, 12, Font.NORMAL);
        
        // Tiêu đề
        Paragraph title = new Paragraph("DANH SÁCH HÓA ĐƠN", fontTitle);
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);
        
        // Thêm khoảng cách
        document.add(new Paragraph(" "));

        // Lấy dữ liệu từ bảng tbl_HoaDon
        int rowCount = model.getRowCount();
        int columnCount = model.getColumnCount();

        // Tạo bảng trong PDF
        PdfPTable pdfTable = new PdfPTable(columnCount);
        pdfTable.setWidthPercentage(100); // Bảng chiếm 100% chiều rộng trang
        pdfTable.setWidths(new float[]{15f, 15f, 15f, 15f, 15f, 15f, 15f, 15f}); // Đặt chiều rộng cột

        // Thêm tiêu đề cột vào bảng PDF
        for (int i = 0; i < columnCount; i++) {
            PdfPCell cell = new PdfPCell(new Phrase(model.getColumnName(i), fontHeader));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            pdfTable.addCell(cell);
        }

        // Định dạng ngày
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

        // Thêm dữ liệu từ bảng tbl_HoaDon vào bảng PDF
        for (int row = 0; row < rowCount; row++) {
            for (int col = 0; col < columnCount; col++) {
                Object value = model.getValueAt(row, col);
                String cellValue = (value != null) ? value.toString() : "";
                // Định dạng lại cột ngày (cột 4 - "Ngày Mua")
                if (col == 4 && value != null && !cellValue.isEmpty()) {
                    try {
                        cellValue = sdf.format(java.sql.Timestamp.valueOf(cellValue));
                    } catch (Exception e) {
                        // Nếu không parse được, giữ nguyên giá trị
                    }
                }
                PdfPCell cell = new PdfPCell(new Phrase(cellValue, fontData));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                pdfTable.addCell(cell);
            }
        }

        // Thêm bảng vào document
        document.add(pdfTable);

        // Đóng document
        document.close();

        // Tự động mở file PDF sau khi tạo
        File pdfFile = new File(pdfFilePath);
        if (pdfFile.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(pdfFile);
            } else {
                JOptionPane.showMessageDialog(this, "Hệ thống không hỗ trợ tự động mở file PDF. File đã được lưu tại: " + pdfFilePath, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "File PDF không tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

        // Hiển thị thông báo thành công
        JOptionPane.showMessageDialog(this, "In hóa đơn thành công! File được lưu tại: " + pdfFilePath, "Thông báo", JOptionPane.INFORMATION_MESSAGE);

    } catch (DocumentException | IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi in hóa đơn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_InHoaDonActionPerformed

    private void tbl_HoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonMouseClicked
        // TODO add your handling code here:
       index = tbl_HoaDon.getSelectedRow();
     if (index >= 0) {
       // Lấy mã hóa đơn từ hàng được chọn
        String maHoaDon = tbl_HoaDon.getValueAt(index, 0).toString();

       // Lấy danh sách chi tiết hóa đơn từ HoaDonChiTietRepo
       ArrayList<HoaDonChiTiet> danhSachChiTiet = repoHDCT.getChiTietHoaDon(maHoaDon);

        // Hiển thị chi tiết hóa đơn lên bảng tbl_HoaDonCT
        DefaultTableModel molCT = (DefaultTableModel) tbl_HoaDonCT.getModel();
        molCT.setRowCount(0); // Xóa bảng cũ
        if (danhSachChiTiet != null && !danhSachChiTiet.isEmpty()) {
            for (HoaDonChiTiet cthd : danhSachChiTiet) {
                molCT.addRow(cthd.toDataRow());
            }
        } else {
           JOptionPane.showMessageDialog(this, "Không tìm thấy chi tiết hóa đơn!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
   }
     
    }//GEN-LAST:event_tbl_HoaDonMouseClicked

    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
   java.util.Date dateFrom = dtc_Tu.getDate();
    java.util.Date dateTo = dtc_Den.getDate();

    // Kiểm tra nếu không có ngày được chọn
    if (dateFrom == null || dateTo == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn cả ngày bắt đầu và ngày kết thúc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra nếu ngày bắt đầu lớn hơn ngày kết thúc
    if (dateFrom.after(dateTo)) {
        JOptionPane.showMessageDialog(this, "Ngày 'từ' phải nhỏ hơn hoặc bằng ngày 'đến'!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Gọi phương thức timHDTheoNgay để tìm kiếm theo ngày
    ArrayList<HoaDon> listHoaDon = repoHD.timHDTheoNgay(dateFrom, dateTo);
    if (listHoaDon == null) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi tìm kiếm hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Kiểm tra nếu không tìm thấy hóa đơn
    if (listHoaDon.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn nào trong khoảng thời gian này!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        // Xóa bảng nếu không có kết quả
        DefaultTableModel modelHoaDon = (DefaultTableModel) tbl_HoaDon.getModel();
        modelHoaDon.setRowCount(0);
        // Xóa chi tiết hóa đơn nếu có
        DefaultTableModel modelChiTiet = (DefaultTableModel) tbl_HoaDonCT.getModel();
        modelChiTiet.setRowCount(0);
        return;
    }

    // Hiển thị thông báo số lượng hóa đơn tìm thấy
    JOptionPane.showMessageDialog(this, "Tìm thấy " + listHoaDon.size() + " hóa đơn!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

    // Hiển thị danh sách hóa đơn lên bảng tbl_HoaDon
    DefaultTableModel modelHoaDon = (DefaultTableModel) tbl_HoaDon.getModel();
    modelHoaDon.setRowCount(0);

    // Định dạng ngày
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    for (HoaDon hd : listHoaDon) {
        String formattedDate = hd.getNgayTao() != null ? sdf.format(java.sql.Timestamp.valueOf(hd.getNgayTao())) : "";
        modelHoaDon.addRow(new Object[]{
            hd.getMaHoaDon(),
            hd.getMaKhachHang(),
            hd.getMaNhanVien(),
            hd.getMaPhieuGiamGia(),
            formattedDate,
            hd.getTongTien(),
            hd.getGiamGia(),
            hd.getThanhToan()
        });
    }

    // Xóa chi tiết hóa đơn nếu có (để tránh hiển thị dữ liệu cũ)
    DefaultTableModel modelChiTiet = (DefaultTableModel) tbl_HoaDonCT.getModel();
    modelChiTiet.setRowCount(0);
    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        ArrayList<HoaDon> danhSachHoaDon = repoHD.lamMoi();
    if (danhSachHoaDon != null) {
        // Xóa dữ liệu cũ trong bảng tblHoaDon
        javax.swing.table.DefaultTableModel HoaDon = (javax.swing.table.DefaultTableModel) tbl_HoaDon.getModel();
        HoaDon.setRowCount(0);

        // Định dạng ngày
        java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        // Thêm dữ liệu mới vào bảng tblHoaDon
        for (HoaDon hd : danhSachHoaDon) {
            String ngayTao = hd.getNgayTao() != null ? dateFormat.format(java.util.Date.from(hd.getNgayTao().atZone(java.time.ZoneId.systemDefault()).toInstant())) : "";
            HoaDon.addRow(new Object[]{
                hd.getMaHoaDon(),
                hd.getMaKhachHang(),
                hd.getMaNhanVien(),
                hd.getMaPhieuGiamGia(),
                ngayTao,
                hd.getTongTien(),
                hd.getGiamGia(),
                hd.getThanhToan()
            });
        }
        txt_TimKiem.setText("");
    // Reset bảng chi tiết hóa đơn (tblChiTietHoaDon)
    javax.swing.table.DefaultTableModel HoaDonCHiTiet = (javax.swing.table.DefaultTableModel) tbl_HoaDonCT.getModel();
    HoaDonCHiTiet.setRowCount(0); // Xóa tất cả các dòng trong bảng chi tiết hóa đơn
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Không thể làm mới dữ liệu hóa đơn!", "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_resetActionPerformed

    private void tbl_HoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonCTMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbl_HoaDonCTMouseClicked

    private void txt_TimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TimKiemKeyReleased
        // TODO add your handling code here:
   String searchText = txt_TimKiem.getText().trim();
    
    ArrayList<HoaDon> listHD;
    if (searchText.isEmpty()) {
        listHD = repoHD.lamMoi(); // Sửa để gọi trực tiếp từ repoHD
    } else {
        listHD = repoHD.timHDKhongTheoNgay(searchText);
    }
    
    DefaultTableModel model = (DefaultTableModel) tbl_HoaDon.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ
    
    // Định dạng ngày
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    for (HoaDon hd : listHD) {
        String formattedDate = hd.getNgayTao() != null ? sdf.format(java.sql.Timestamp.valueOf(hd.getNgayTao())) : "";
        Object[] row = {
            hd.getMaHoaDon(),
            hd.getMaKhachHang(),
            hd.getMaNhanVien(),
            hd.getMaPhieuGiamGia(),
            formattedDate,
            hd.getTongTien(),
            hd.getGiamGia(),
            hd.getThanhToan() // Sửa từ getThanhTien() thành getThanhToan()
        };
        model.addRow(row);
    }
    }//GEN-LAST:event_txt_TimKiemKeyReleased

    private void txt_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_InHoaDon;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_reset;
    private com.toedter.calendar.JDateChooser dtc_Den;
    private com.toedter.calendar.JDateChooser dtc_Tu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbl_HoaDon;
    private javax.swing.JTable tbl_HoaDonCT;
    private javax.swing.JTextField txt_TimKiem;
    // End of variables declaration//GEN-END:variables
}
